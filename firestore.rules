rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
    
    // Items collection
    match /items/{itemId} {
      // Anyone can read published items
      allow read: if resource.data.isPublished == true || 
                     (isAuthenticated() && resource.data.hostId == request.auth.uid);
      
      // Only authenticated users can create items
      allow create: if isAuthenticated() && 
                       request.resource.data.hostId == request.auth.uid;
      
      // Only the host can update or delete their items
      allow update: if isAuthenticated() && 
                       resource.data.hostId == request.auth.uid;
      allow delete: if isAuthenticated() && 
                       resource.data.hostId == request.auth.uid;
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      // Users can read their own bookings (as renter or host)
      allow read: if isAuthenticated() && 
                     (resource.data.renterId == request.auth.uid || 
                      resource.data.hostId == request.auth.uid);
      
      // Authenticated users can create bookings
      allow create: if isAuthenticated() && 
                       request.resource.data.renterId == request.auth.uid;
      
      // Both renter and host can update bookings
      allow update: if isAuthenticated() && 
                       (resource.data.renterId == request.auth.uid || 
                        resource.data.hostId == request.auth.uid);
      
      // Bookings cannot be deleted, only status changed
      allow delete: if false;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;
      
      // Only authenticated users can create reviews
      allow create: if isAuthenticated() && 
                       request.resource.data.reviewerId == request.auth.uid;
      
      // Reviews cannot be updated or deleted once created
      allow update: if false;
      allow delete: if false;
    }
  }
}